{"ast":null,"code":"var _jsxFileName = \"D:\\\\Contact-Manager\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { v4 as uuid } from \"uuid\";\n// import \"./App.css\";\n// import Header from \"./Header\";\n// import AddContact from \"./AddContact\";\n// import ContactList from \"./ContactList\";\n\n// function App() {\n//   const LOCAL_STORAGE_KEY = \"contacts\";\n//   const [contacts, setContacts] = useState(\n//     JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) ?? []\n//   );\n\n//   const addContactHandler = (contact) => {\n//     console.log(contact);\n//     setContacts([...contacts, { id: uuid(), ...contact }]);\n//   };\n\n//   const removeContactHandler = (id) => {\n//     const newContactList = contacts.filter((contact) => {\n//       return contact.id !== id;\n//     });\n\n//     setContacts(newContactList);\n//   };\n\n//   // useEffect(() => {\n//   //   const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n//   //   if (retriveContacts) setContacts(retriveContacts);\n//   // }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n//   }, [contacts]);\n\n//   return (\n//     <div className=\"ui container\">\n//       <Header />\n//       <AddContact addContactHandler={addContactHandler} />\n//       <ContactList contacts={contacts} getContactId={removeContactHandler} />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const [editContact, setEditContact] = useState(null);\n  const fetchContacts = async () => {\n    const response = await fetch(\"/api/contacts\");\n    const data = await response.json();\n    setContacts(data);\n  };\n  const addContactHandler = async contact => {\n    if (editContact) {\n      const response = await fetch(`/api/contacts/${editContact.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(contact)\n      });\n      setEditContact(null);\n    } else {\n      await fetch(\"/api/contacts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: uuid(),\n          ...contact\n        })\n      });\n    }\n    fetchContacts();\n  };\n  const removeContactHandler = async id => {\n    await fetch(`/api/contacts/${id}`, {\n      method: \"DELETE\"\n    });\n    fetchContacts();\n  };\n  const editContactHandler = contact => {\n    setEditContact(contact);\n  };\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${isDarkTheme ? \"dark\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        isDarkTheme: isDarkTheme,\n        setIsDarkTheme: setIsDarkTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddContact, {\n        addContactHandler: addContactHandler,\n        editContact: editContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: contacts,\n        getContactId: removeContactHandler,\n        editContactHandler: editContactHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Tvp+shPyT2tugRioEsMi4R8NY0g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuid","Header","AddContact","ContactList","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","isDarkTheme","setIsDarkTheme","editContact","setEditContact","fetchContacts","response","fetch","data","json","addContactHandler","contact","id","method","headers","body","JSON","stringify","removeContactHandler","editContactHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getContactId","_c","$RefreshReg$"],"sources":["D:/Contact-Manager/src/components/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { v4 as uuid } from \"uuid\";\n// import \"./App.css\";\n// import Header from \"./Header\";\n// import AddContact from \"./AddContact\";\n// import ContactList from \"./ContactList\";\n\n// function App() {\n//   const LOCAL_STORAGE_KEY = \"contacts\";\n//   const [contacts, setContacts] = useState(\n//     JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) ?? []\n//   );\n\n//   const addContactHandler = (contact) => {\n//     console.log(contact);\n//     setContacts([...contacts, { id: uuid(), ...contact }]);\n//   };\n\n//   const removeContactHandler = (id) => {\n//     const newContactList = contacts.filter((contact) => {\n//       return contact.id !== id;\n//     });\n\n//     setContacts(newContactList);\n//   };\n\n//   // useEffect(() => {\n//   //   const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n//   //   if (retriveContacts) setContacts(retriveContacts);\n//   // }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n//   }, [contacts]);\n\n//   return (\n//     <div className=\"ui container\">\n//       <Header />\n//       <AddContact addContactHandler={addContactHandler} />\n//       <ContactList contacts={contacts} getContactId={removeContactHandler} />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const [editContact, setEditContact] = useState(null);\n\n  const fetchContacts = async () => {\n    const response = await fetch(\"/api/contacts\");\n    const data = await response.json();\n    setContacts(data);\n  };\n\n  const addContactHandler = async (contact) => {\n    if (editContact) {\n      const response = await fetch(`/api/contacts/${editContact.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(contact),\n      });\n      setEditContact(null);\n    } else {\n      await fetch(\"/api/contacts\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ id: uuid(), ...contact }),\n      });\n    }\n    fetchContacts();\n  };\n\n  const removeContactHandler = async (id) => {\n    await fetch(`/api/contacts/${id}`, { method: \"DELETE\" });\n    fetchContacts();\n  };\n\n  const editContactHandler = (contact) => {\n    setEditContact(contact);\n  };\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  return (\n    <div className={`${isDarkTheme ? \"dark\" : \"\"}`}>\n      <div className=\"ui container\">\n        <Header isDarkTheme={isDarkTheme} setIsDarkTheme={setIsDarkTheme} />\n        <AddContact\n          addContactHandler={addContactHandler}\n          editContact={editContact}\n        />\n        <ContactList\n          contacts={contacts}\n          getContactId={removeContactHandler}\n          editContactHandler={editContactHandler}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}